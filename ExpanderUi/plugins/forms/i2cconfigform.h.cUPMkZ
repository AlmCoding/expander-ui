#ifndef I2CCONFIGFORM_H
#define I2CCONFIGFORM_H

#include <QObject>
#include <QString>
#include "plugins/containers/i2cconfig.h"

class I2cConfigForm : public QObject {
    Q_OBJECT
    Q_ENUM(I2cConfig::I2cId)
    Q_ENUM(I2cConfig::ClockFreq)
    Q_ENUM(I2cConfig::MemAddrWidth)
    Q_ENUM(I2cConfig::SlaveAddrWidth)
    Q_PROPERTY(I2cConfig::I2cId i2cId READ getI2cId WRITE setI2cId NOTIFY i2cIdChanged)
    Q_PROPERTY(QString slaveAddr READ getSlaveAddr WRITE setSlaveAddr NOTIFY slaveAddrChanged)
    Q_PROPERTY(I2cConfig::ClockFreq clockFreq READ getClockFreq WRITE setClockFreq NOTIFY clockFreqChanged)
    Q_PROPERTY(
        I2cConfig::MemAddrWidth memAddrWidth READ getMemAddrWidth WRITE setMemAddrWidth NOTIFY memAddrWidthChanged)
    Q_PROPERTY(I2cConfig::SlaveAddrWidth slaveAddrWidth READ getSlaveAddrWidth WRITE setSlaveAddrWidth NOTIFY
                   slaveAddrWidthChanged)

   public:
    explicit I2cConfigForm(QObject* parent = nullptr);

    I2cId getI2cId() const { return i2c_id_; }
    QString getSlaveAddr() const { return slave_addr_; }
    ClockFreq getClockFreq() const { return clock_freq_; }
    MemAddrWidth getMemAddrWidth() const { return mem_addr_width_; }
    SlaveAddrWidth getSlaveAddrWidth() const { return slave_addr_width_; }

   public slots:
    void setI2cId(I2cId i2cId) {
        i2c_id_ = i2cId;
        emit i2cIdChanged(i2cId);
    }
    void setSlaveAddr(const QString& slaveAddr) {
        slave_addr_ = slaveAddr;
        emit slaveAddrChanged(slaveAddr);
    }
    void setClockFreq(ClockFreq clockFreq) {
        clock_freq_ = clockFreq;
        emit clockFreqChanged(clockFreq);
    }
    void setMemAddrWidth(MemAddrWidth memAddrWidth) {
        mem_addr_width_ = memAddrWidth;
        emit memAddrWidthChanged(memAddrWidth);
    }
    void setSlaveAddrWidth(SlaveAddrWidth slaveAddrWidth) {
        slave_addr_width_ = slaveAddrWidth;
        emit slaveAddrWidthChanged(slaveAddrWidth);
    }
    I2cConfig getConfig();

   signals:
    void i2cIdChanged(I2cId id);
    void slaveAddrChanged(QString addr);
    void clockFreqChanged(ClockFreq freq);
    void memAddrWidthChanged(MemAddrWidth width);
    void slaveAddrWidthChanged(SlaveAddrWidth width);

   private:
    I2cConfig i2c_config_;
};

#endif  // I2CCONFIGFORM_H
